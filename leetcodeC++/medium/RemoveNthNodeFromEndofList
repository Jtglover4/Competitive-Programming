/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {

        ListNode* copy = head;

        queue<ListNode*> myQueue;

        while(copy != NULL){

            if(myQueue.size() >= n+1){
                myQueue.pop();
            }
            myQueue.push(copy);
            copy = copy -> next;

        }
        if(myQueue.size() == 1 && n > 0){
            return NULL;
        }
        if(myQueue.size() > n){
            (myQueue.front()) -> next = (myQueue.front()) -> next -> next;
        }else{
            head = head -> next;
        }
        return head;
    }
};
